{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/game/game.component.ts","webpack:///src/app/game/game.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/homepage/homepage.component.ts","webpack:///src/app/homepage/homepage.component.register.html","webpack:///src/app/homepage/homepage.component.html","webpack:///src/app/homepage/homepage.component.login.html","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/app/principal-page/principal-page.component.ts","webpack:///src/app/principal-page/principal-page.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/ranking/ranking.component.ts","webpack:///src/app/ranking/ranking.component.html","webpack:///src/app/set-selector/set-selector.component.ts","webpack:///src/app/set-selector/set-selector.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","pathMatch","AppRoutingModule","forRoot","imports","routingComponents","AppComponent","titleService","title","setTitle","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","providers","bootstrap","FooterComponent","GameComponent","set","history","state","param_not_in_url","matrix","i","push","j","HeaderComponent","HomepageComponent","dialog","dialogRef","open","loginDialog","width","data","password","username","registerDialog","name","openLogin","openRegister","hide","close","onNoClick","PageNotFoundComponent","PrincipalPageComponent","ProfileComponent","RankingComponent","SetSelectorComponent","router","route","Sets","console","log","firestore","getSet","navigate","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//Imports de los componentes por los que navegar\nimport { HomepageComponent, loginDialog, registerDialog } from './homepage/homepage.component';\nimport { PrincipalPageComponent } from './principal-page/principal-page.component';\nimport { GameComponent } from './game/game.component';\nimport { SetSelectorComponent } from './set-selector/set-selector.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { RankingComponent } from './ranking/ranking.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\n//Rutas de los componentes\nconst routes: Routes = [\n  { path: '', component: HomepageComponent, pathMatch: 'full'}, //Para que cuando la ruta sea '' se vaya a la página de inicio\n  { path: 'principalpage', component: PrincipalPageComponent },\n  { path: 'game', component: GameComponent },\n  { path: 'set-selector', component: SetSelectorComponent,  },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'ranking', component: RankingComponent },\n  { path: \"**\", component: PageNotFoundComponent }  //Para que cuando la ruta sea desconocida se vaya a la página de no encontrado\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n//Constante para guardar todos los componentes que hemos importado solo aquí, así solo tenemos que importar roitingComponents en app.module.ts\nexport const routingComponents = [HomepageComponent, loginDialog, registerDialog, PrincipalPageComponent, GameComponent, ProfileComponent, RankingComponent, PageNotFoundComponent]\n","import { Component } from '@angular/core';\nimport {Title} from \"@angular/platform-browser\"\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Quien es Quien';\n\n  constructor(private titleService:Title) {\n    this.titleService.setTitle(this.title);\n  }\n  \n}\n","\n<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\n// Imports de los materiales de Angular\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SetSelectorComponent } from './set-selector/set-selector.component';\n\n//Cosas firebase\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    routingComponents,\n    SetSelectorComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n\n    //Cosas firebase \n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Footer -->\n<mat-toolbar class=\"example-footer\">\n\n  <p class=\"wordsFooter\">Creadores:</p>\n  <p class=\"wordsFooter\">Guillermo Bautista-Abad Acebes</p>\n  <p class=\"wordsFooter\">Alba Reinders Sánchez</p>\n\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.scss']\n})\nexport class GameComponent implements OnInit {\n\n  //Matriz para el tablero\n  public matrix:Array<Array<number>>;\n  public set:Number;\n\n  constructor() {\n    this.set=history.state.param_not_in_url;\n    this.matrix=[];\n\n    //Para rellenar la matriz\n    for(let i=0; i<4; i++){\n      this.matrix.push( [] ) ;\n      for(let j=0; j<6; j++){\n        this.matrix[i].push(0);\n      }\n    }\n   }\n\n  ngOnInit(): void {\n\n  }\n\n\n}\n","<!-- Header -->\n<app-header></app-header>\n\n<!-- Tablero -->\n<div class=\"table\">\n  <ng-container *ngFor=\"let row of matrix;\" >\n    <img *ngFor=\"let col of row;\" class= \"characterPic\" src=\"assets/img/70.svg\">\n    <br>\n  </ng-container>\n</div>\n\n{{set}}\n\n<!-- Footer -->\n<app-footer></app-footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n    \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Header -->\n\n<mat-toolbar class=\"header\">\n\n  <div class= \"logoH\">\n    <img class=\"logoHeader\"src=\"assets/img/logo.png\">\n  </div>\n\n  <!-- Para navegar a la página de inicio ponemos routerLink=\"\" -->\n  <h1 class=\"nameHeader\" routerLink=\"\">¿Quién es Quién?</h1>\n\n  <p class=\"levelHeader\">NIVEL X</p>\n\n  <div class= \"divProfileHeader\">\n    <img class=\"userPhoto\" src=\"assets/img/profilePhotoEx.jpeg\" routerLink=\"/profile\">\n    <!-- Para navegar a la página del perfil ponemos routerLink=\"/profile\" -->\n    <p class=\"usernameHeader\" routerLink=\"/profile\">Nombre</p>\n  </div>\n\n</mat-toolbar>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n//Interfaz del dialog\nexport interface DialogData {\n  username: string;\n  password: string;\n  name: string;\n}\n\n//Componente de la Homepage\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.scss']\n})\n\n//Clase del HomepageComponent\nexport class HomepageComponent implements OnInit {\n\n  username: string;\n  password: string;\n  name: string;\n\n  constructor(public dialog: MatDialog) {}\n\n  //Función para abrir el popup de login\n  openLogin(): void {\n    const dialogRef = this.dialog.open(loginDialog, {\n      width: '20%',\n      data: {password: this.password, username: this.username}\n    });\n  }\n\n  //Función para abrir el popup de register\n  openRegister(): void {\n    const dialogRef = this.dialog.open(registerDialog, {\n      width: '22%',\n      data: {password: this.password, username: this.username, name: this.name}\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n//Componente auxiliar para login\n@Component({\n  selector: 'app-homepage-login',\n  templateUrl: './homepage.component.login.html',\n  styleUrls: ['./homepage.component.login.scss']\n})\n\n//Clase del popup del login\nexport class loginDialog {\n  hide = true;   //Para que la contraseña no se vea\n\n  constructor(\n    public dialogRef: MatDialogRef<loginDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n\n//Componente auxiliar para register\n@Component({\n  selector: 'app-homepage-register',\n  templateUrl: './homepage.component.register.html',\n  styleUrls: ['./homepage.component.register.scss']\n})\n\n//Clase del popup del register\nexport class registerDialog {\n  hide = true;   //Para que la contraseña no se vea\n\n  public passwordR : string; //Variable pública para el input de repetir contraseña\n\n  constructor(\n    public dialogRef: MatDialogRef<registerDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<!-- Popup Registro -->\n<h2 class=\"titleRegister\">Registro</h2>\n\n<br>\n\n<!-- Nombre -->\n<mat-form-field class=\"inputName\">\n  <!-- Guardamos su valor en data.name -->\n  <input matInput placeholder=\"Introduce un nombre\" [(ngModel)]=\"data.name\" required>\n</mat-form-field>\n\n<!-- Nombre de usuario -->\n<mat-form-field class=\"inputNameuser\">\n  <!-- Guardamos su valor en data.username -->\n  <input matInput placeholder=\"Introduce un nombre de usuario\" [(ngModel)]=\"data.username\" required>\n</mat-form-field>\n<!-- Comprobamos que tiene un mínimo de 5 letras y sino sale un error -->\n<mat-error *ngIf=\"data.username != undefined && data.username.length<5\">Mínimo 5 letras</mat-error>\n\n<!-- Contraseña -->\n<div>\n  <mat-form-field appearance=\"fill\" class=\"inputPassword\">\n    <mat-label>Introduce una contraseña</mat-label>\n    <!-- Guardamos su valor en data.password -->\n    <input matInput [type]=\"hide ? 'password' : 'text'\" [(ngModel)]=\"data.password\" required>\n    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n    </button>\n  </mat-form-field>\n  <!-- Comprobamos que tiene un mínimo de 6 letras y sino sale un error -->\n  <mat-error *ngIf=\"data.password != undefined && data.password.length<6\">Mínimo 6 letras</mat-error>\n</div>\n\n<!-- Confirmar contraseña -->\n<div>\n  <mat-form-field appearance=\"fill\" class=\"inputPassword\">\n    <mat-label>Repite la contraseña</mat-label>\n    <!-- Guardamos su valor en passwordR -->\n    <input matInput [type]=\"hide ? 'password' : 'text'\" [(ngModel)]=\"passwordR\" required>\n    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n    </button>\n  </mat-form-field>\n  <!-- Comprobamos que la contraseña repetida es igual a la contraseña y sino sale un error -->\n  <mat-error *ngIf=\"passwordR != undefined && passwordR != data.password\">Contraseña distinta</mat-error>\n</div>\n\n<!-- Botón Finalizar -->\n<div class=\"centerRegister\">\n  <!-- Para que no lo podamos pulsar hasta que no hayamos rellenado todos los campos hacemos todas las comparaciones -->\n  <button type=\"submit\" [disabled]=\"data.name == undefined || data.name =='' || data.username == undefined || data.username =='' || data.password == undefined || data.password =='' || passwordR == undefined || passwordR =='' || passwordR != data.password\" class=\"buttonR\" mat-raised-button color=\"primary\" routerLink=\"/principalpage\" (click)='onNoClick()'>Finalizar</button>\n</div>\n","<!-- Imagen fondo de pantalla -->\n<div class=\"wallpaper\">\n\n  <div class=\"centerT\">\n    <h1 class=\"title\">¿Quién es Quién?</h1>\n  </div>\n\n  <div class=\"centerS\">\n    <h3 class=\"subtitle\"> ¿Serás capaz de adivinar el personaje misterioso antes que tu oponente? </h3>\n  </div>\n\n  <div class=\"centerL\">\n    <img class=\"logoHomepage\" src=\"assets/img/logo.png\">\n  </div>\n\n  <div class=\"centerB\">\n    <!-- Para abrir los popups de inicio de sesión y registro cuando damos a sus respectivos botones usamos las funciones openLogin() y openRegister() -->\n    <button class=\"buttonIS\" mat-raised-button (click)='openLogin()'>Iniciar sesión</button>\n    <button class=\"buttonR\" mat-raised-button (click)='openRegister()'>Registrarse</button>\n  </div>\n\n\n</div>\n\n<!-- Footer -->\n<app-footer></app-footer>\n","<!-- Popup Inicio de sesión -->\n<h2 class=\"titleLogin\">Inicio de sesión</h2>\n<br>\n<!-- Input Nombre de usuario -->\n<mat-form-field class=\"inputNameuser\">\n  <!-- Guardamos su valor en data.username -->\n  <input matInput placeholder=\"Nombre de usuario\" [(ngModel)]=\"data.username\" required>\n</mat-form-field>\n\n<!-- Input Contraseña -->\n<div>\n  <mat-form-field appearance=\"fill\" class=\"inputPassword\">\n    <mat-label>Contraseña</mat-label>\n    <!-- Guardamos su valor en data.password -->\n    <input matInput [type]=\"hide ? 'password' : 'text'\" [(ngModel)]=\"data.password\" required>\n    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n    </button>\n  </mat-form-field>\n</div>\n\n<!-- Botón Iniciar -->\n<div class=\"centerLogin\">\n  <!-- Para que no lo podamos pulsar hasta que no hayamos rellenado todos los campos hacemos todas las comparaciones -->\n  <button type=\"submit\" [disabled]=\"data.username == undefined || data.username =='' || data.password == undefined || data.password ==''\" class=\"buttonI\" mat-raised-button color=\"primary\" routerLink=\"/principalpage\" (click)='onNoClick()'>Iniciar</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1> Page not found </h1>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-principal-page',\n  templateUrl: './principal-page.component.html',\n  styleUrls: ['./principal-page.component.scss']\n})\nexport class PrincipalPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Header -->\n<app-header></app-header>\n\n<!-- Imagen fondo de pantalla -->\n<div class=\"wallpaperPP\">\n\n  <div class=\"buttons\">\n    <button class=\"buttonC\" mat-raised-button routerLink=\"/set-selector\">Crear una partida</button>\n    <button class=\"buttonU\" mat-raised-button routerLink=\"/game\">Unirse a una partida</button>\n  </div>\n\n</div>\n\n<!-- Footer -->\n<app-footer></app-footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Header -->\n<app-header></app-header>\n\n<!-- Imagen fondo de pantalla -->\n<div class=\"wallpaperP\">\n\n  <div class=\"card\">\n\n\n    <h2 class=\"usernameProfile\"> Nombre de usuario </h2>\n\n    <h2 class=\"levelProfile\"> NIVEL X </h2>\n\n    <div class= \"photoProfile\">\n      <img class=\"userPhotoProfile\"src=\"assets/img/profilePhotoEx.jpeg\">\n    </div>\n\n    <div class=\"divLevel\">\n      <mat-progress-bar class=\"levelBar\" mode=\"determinate\" value=\"80\" color=\"warn\"></mat-progress-bar>\n      <p class=\"pointsProfile\"> 80 PUNTOS de 100 </p>\n    </div>\n\n\n    <p class=\"rankingLink\" routerLink=\"/ranking\"> RANKING </p>\n\n  </div>\n\n</div>\n\n<!-- Footer -->\n<app-footer></app-footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ranking',\n  templateUrl: './ranking.component.html',\n  styleUrls: ['./ranking.component.scss']\n})\nexport class RankingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Header -->\n<app-header></app-header>\n\n<!-- Imagen fondo de pantalla -->\n<div class=\"wallpaperP\">\n\n  <div class=\"rank\">\n\n    <div class= \"photoTrophy\">\n      <img class=\"trophy\"src=\"assets/img/goal.svg\">\n    </div>\n    <h2 class=\"titleRanking\"> RANKING MEJORES JUGADORES </h2>\n\n\n    <div class=\"divUser\">\n      <div class= \"divUserPhotoRank\">\n        <img class=\"userPhotoRanking\"src=\"assets/img/profilePhotoEx.jpeg\">\n      </div>\n      <p class=\"usernameRanking\"> Nombre usuario </p>\n      <p class=\"levelRanking\"> NIVEL X </p>\n      <p class=\"pointsRanking\"> 100 puntos </p>\n\n    </div>\n\n  </div>\n\n\n</div>\n\n<!-- Footer -->\n<app-footer></app-footer>\n","import { Component, OnInit} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {Set} from '../sets';\nimport {FirestoreService} from '../services/firestore/firestore.service';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-set-selector',\n  templateUrl: './set-selector.component.html',\n  styleUrls: ['./set-selector.component.scss']\n})\n\n\n\nexport class SetSelectorComponent implements OnInit {\n  \n  //Matriz para el tablero\n  public Sets:Array<any>;\n\n  public setfb:Set;\n\n  public firestore:FirestoreService;\n\n  constructor(public router: Router, public route: ActivatedRoute) {\n\n    this.Sets=[\n      {\n        \"route\": 'assets/sets/1.png',\n        \"id\": 0\n       },\n       {\n        \"route\": 'assets/sets/1.png (copy)', \n        \"id\": 1\n       },\n       {\n         \"route\": 'assets/sets/2.png',\n         \"id\": 2\n        }\n\n      ];\n\n  }\n\n  ngOnInit(): void {\n    console.log(this.firestore.getSet('0'));\n  }\n\n  select(id:Number){\n    this.router.navigate(['/game'],     // En URL y participan en el routing.\n    //{param_extra1:'XXX',param_extra2:57}],  // Se pasan codificados en la url.\n    { state: { param_not_in_url: id }}   // No se muestran en la URL\n    );\n  }\n\n}\n","<!-- Header -->\n<app-header></app-header>\n\n<!-- Tablero -->\n<div class=\"table\">\n  \n      <img *ngFor=\"let set of Sets;\" class=\"set\" src={{set.route}} alt=\"set {{set.id}}\" (click)=\"select(set.id)\" >\n      <br>\n\n  </div>\n\n\n<!-- Footer -->\n<app-footer></app-footer>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase:{\n    apiKey: \"AIzaSyBnidYlTAT7HnlUAskwLi6rTJ25_Ack7KI\",\n    authDomain: \"quien-es-quien-d6954.firebaseapp.com\",\n    databaseURL: \"https://quien-es-quien-d6954.firebaseio.com\",\n    projectId: \"quien-es-quien-d6954\",\n    storageBucket: \"quien-es-quien-d6954.appspot.com\",\n    messagingSenderId: \"1048903278225\",\n    appId: \"1:1048903278225:web:1f103e25d3d75ef9226930\",\n    measurementId: \"G-TKJCY8DMTT\"\n  }\n  \n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}